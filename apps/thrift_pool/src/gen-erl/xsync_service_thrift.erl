%%
%% Autogenerated by Thrift Compiler (0.11.0)
%%
%% DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
%%

-module(xsync_service_thrift).
-behaviour(thrift_service).


-include("xsync_service_thrift.hrl").

-export([struct_info/1, function_info/2, function_names/0]).

struct_info(_) -> erlang:error(function_clause).
%%% interface
% getUserMessageCount(This, UserId)
function_info('getUserMessageCount', params_type) ->
  {struct, [{1, i64}]}
;
function_info('getUserMessageCount', reply_type) ->
  i32;
function_info('getUserMessageCount', exceptions) ->
  {struct, [{1, {struct, {'xsync_service_types', 'XSyncException'}}}]}
;
% getUserMessagesByConversation(This, Userid, OppositeId, MsgIdStart, Limit)
function_info('getUserMessagesByConversation', params_type) ->
  {struct, [{1, i64},
          {2, i64},
          {3, i64},
          {4, i32}]}
;
function_info('getUserMessagesByConversation', reply_type) ->
  {struct, {'xsync_service_types', 'ConversationMessages'}};
function_info('getUserMessagesByConversation', exceptions) ->
  {struct, [{1, {struct, {'xsync_service_types', 'XSyncException'}}}]}
;
% getUserUnreadList(This, Xid)
function_info('getUserUnreadList', params_type) ->
  {struct, [{1, {struct, {'xsync_service_types', 'XID'}}}]}
;
function_info('getUserUnreadList', reply_type) ->
  {list, {struct, {'xsync_service_types', 'Unread'}}};
function_info('getUserUnreadList', exceptions) ->
  {struct, []}
;
% ackMessage(This, Xid, ConversationId, MsgId)
function_info('ackMessage', params_type) ->
  {struct, [{1, {struct, {'xsync_service_types', 'XID'}}},
          {2, {struct, {'xsync_service_types', 'XID'}}},
          {3, i64}]}
;
function_info('ackMessage', reply_type) ->
  bool;
function_info('ackMessage', exceptions) ->
  {struct, []}
;
% kickSessions(This, Xid)
function_info('kickSessions', params_type) ->
  {struct, [{1, {struct, {'xsync_service_types', 'XID'}}}]}
;
function_info('kickSessions', reply_type) ->
  bool;
function_info('kickSessions', exceptions) ->
  {struct, []}
;
function_info(_Func, _Info) -> erlang:error(function_clause).

function_names() -> 
  ['getUserMessageCount', 'getUserMessagesByConversation', 'getUserUnreadList', 'ackMessage', 'kickSessions'].

